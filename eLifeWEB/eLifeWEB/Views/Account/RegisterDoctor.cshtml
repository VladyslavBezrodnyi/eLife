@model eLifeWEB.Models.RegisterDoctorModel

@Styles.Render("~/Content/font-awesome.css")
@Styles.Render("~/Content/RegisterClinicAdmin.css")

@{
    ViewBag.Title = "Реєстрація доктора";
}

@Styles.Render("~/Content/stepper.css")
<div class="col mx-auto mb-4 stepper">
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="completed">
            <a class="persistant-disabled" data-toggle="tab" aria-controls="stepper-step-1" role="tab" title="Step 1">
                <span class="round-tab">1</span>
            </a>
        </li>
        <li role="presentation" class="completed">
            <a class="persistant-disabled" data-toggle="tab" aria-controls="stepper-step-2" role="tab" title="Step 2">
                <span class="round-tab">2</span>
            </a>
        </li>
        <li role="presentation" class="active">
            <a class="persistant-disabled" data-toggle="tab" aria-controls="stepper-step-3" role="tab" title="Step 3">
                <span class="round-tab">3</span>
            </a>
        </li>
    </ul>
</div>


@using (Html.BeginForm("RegisterDoctor", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <h2 class="text-center">@ViewBag.Title</h2>
            <hr>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Ваше повне ім'я:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-user-md fa-2x"></i></div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "П. І. Б.", @class = "form-control input_fix" } })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Ваша стать:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-venus-mars fa-2x"></i></div>
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new List<String>() { "Жіноча", "Чоловіча" }), new { @class = "form-control input_fix аааа custom-select" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>День народження:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-calendar fa-2x"></i></div>
                    @Html.TextBoxFor(model => model.Birthday, new { type = "date", @class = "form-control input_fix" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Ваші уміння:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-lightbulb-o fa-2x"></i></div>
                    @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { placeholder = "Опишіть ваші уміння та навички", @class = "form-control input_fix" } })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Спеціалізація:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-users fa-2x"></i></div>
                    @Html.DropDownListFor(model => model.Specialization, ViewBag.Specialization as SelectList, new { @class = "form-control input_fix custom-select" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Ваша категорія:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group has-danger">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-graduation-cap fa-2x"></i></div>
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { placeholder = "Ваша кваліфікаційна категорія", @class = "form-control input_fix" } })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Стаж роботи:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group has-danger">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-hourglass-half fa-2x"></i></div>
                    @Html.EditorFor(model => model.Guardian, new { htmlAttributes = new { placeholder = "Ваш стаж роботи", @class = "form-control input_fix" } })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Guardian, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Клініка:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group has-danger">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-hospital-o fa-2x"></i></div>
                    @Html.DropDownListFor(model => model.СlinicId, ViewBag.ClinicId as SelectList, new { @class = "form-control input_fix custom-select" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.СlinicId, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Освіта:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group has-danger">
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon" style="width: 2.2rem"><i class="fa fa-book fa-2x"></i></div>
                    @Html.EditorFor(model => model.Education, new { htmlAttributes = new { placeholder = "Ваша освіта", @class = "form-control input_fix" } })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-control-feedback">
                @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger align-middle" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 field-label-responsive">
            <label>Ваше фото:</label>
        </div>
        <div class="col-md-6">
            <div class="form-group files color">
                <input type="file" class="form-control" multiple="" id="inputFile">
            </div>
        </div>
        <div class="col-md-3">
            <img id="image_upload_preview" class="py-2" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <button type="submit" class="btn btn-primary btn-block"><i class="fa fa-user-plus"></i> Зареєструватися  </button>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jquery")
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#image_upload_preview').attr('src', e.target.result);
                $('#image_upload_preview').attr('height', '170');
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#inputFile").change(function () {
        readURL(this);
    });
</script>
